{
    "name": "NFTMarketplaceContract",
    "structs": {},
    "methods": [
        {
            "name": "create_marketplace_application",
            "args": [
                {
                    "type": "asset",
                    "name": "asset_id"
                },
                {
                    "type": "uint64",
                    "name": "price"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_in_to_asset",
            "args": [
                {
                    "type": "pay",
                    "name": "mbrpay"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_price",
            "args": [
                {
                    "type": "uint64",
                    "name": "price"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "buy",
            "args": [
                {
                    "type": "pay",
                    "name": "buyerTxn"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delete_application",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 3,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "asset_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNzZXRfaWQ="
                },
                "price": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "cHJpY2U="
                },
                "holder": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "aG9sZGVy"
                },
                "assetid": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNzZXRpZA=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        83
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        95,
                        117,
                        133,
                        155
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        159
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        86,
                        98,
                        120,
                        136
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        205,
                        305,
                        344
                    ],
                    "errorMessage": "check self.assetid exists"
                },
                {
                    "pc": [
                        260,
                        286,
                        334
                    ],
                    "errorMessage": "check self.holder exists"
                },
                {
                    "pc": [
                        296
                    ],
                    "errorMessage": "check self.price exists"
                },
                {
                    "pc": [
                        108,
                        146
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADAAEEJgMGaG9sZGVyB2Fzc2V0aWQFcHJpY2UxG0EAKoIFBDhFvtQEFXRTWgTMdgA3BJWNPfkEM7NJnjYaAI4FAEwANgAmABAAAiJDMRmBBRJEMRhEiADvI0MxGRREMRhEMRYjCUk4ECMSRIgAnCNDMRkURDEYRDYaAReIAHwjQzEZFEQxGEQxFiMJSTgQIxJEiAApI0MxGRREMRgURDYaARfAMDYaAheIAAIjQ4oCACgxAGcpi/5nKov/Z4mKAQAxADIJEkQyCiIpZURMSwFwAEUBFESL/zgHMgoSRIv/OAgyATIQCBJEsTIKIrISshSyESSyECKyAbOJigEAMQAiKGVEEkQqi/9niYoBAIv/OAAxABJEi/84ByIoZUQSRIv/OAgiKmVEEkSxMgoiKWVEMQAjshKyFLIRsgAkshAisgGzKDEAZ4kxACIoZURMSwESRLEiKWVESwGyFSKyErIRshQkshCB6AeyAbOJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 9,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}